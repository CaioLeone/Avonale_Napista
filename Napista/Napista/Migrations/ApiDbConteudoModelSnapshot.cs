// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Napista.Data;

namespace Napista.Migrations
{
    [DbContext(typeof(ApiDbConteudo))]
    partial class ApiDbConteudoModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseIdentityColumns()
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.0");

            modelBuilder.Entity("Napista.Models.Cartao", b =>
                {
                    b.Property<int>("Numero")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Bandeira")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Cvv")
                        .HasColumnType("int");

                    b.Property<DateTime>("Data_expedicao")
                        .HasColumnType("datetime2");

                    b.Property<string>("Titular")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Numero");

                    b.ToTable("Cartao");
                });

            modelBuilder.Entity("Napista.Models.Compras", b =>
                {
                    b.Property<int>("Produto_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int?>("CartaoNumero")
                        .HasColumnType("int");

                    b.Property<int>("Qtde_comprada")
                        .HasColumnType("int");

                    b.HasKey("Produto_Id");

                    b.HasIndex("CartaoNumero");

                    b.ToTable("Compras");
                });

            modelBuilder.Entity("Napista.Models.Pagamento", b =>
                {
                    b.Property<int>("Id_Pagamento")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int?>("CartaoNumero")
                        .HasColumnType("int");

                    b.Property<double>("Valor")
                        .HasColumnType("float");

                    b.HasKey("Id_Pagamento");

                    b.HasIndex("CartaoNumero");

                    b.ToTable("Pagamento");
                });

            modelBuilder.Entity("Napista.Models.Produtos", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<DateTime>("Data_venda")
                        .HasColumnType("datetime2");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Qtde_estoque")
                        .HasColumnType("int");

                    b.Property<float>("Valor_unitario")
                        .HasColumnType("real");

                    b.Property<float>("Valor_venda")
                        .HasColumnType("real");

                    b.HasKey("Id");

                    b.ToTable("Produtos");
                });

            modelBuilder.Entity("Napista.Models.Compras", b =>
                {
                    b.HasOne("Napista.Models.Cartao", "Cartao")
                        .WithMany()
                        .HasForeignKey("CartaoNumero");

                    b.Navigation("Cartao");
                });

            modelBuilder.Entity("Napista.Models.Pagamento", b =>
                {
                    b.HasOne("Napista.Models.Cartao", "Cartao")
                        .WithMany()
                        .HasForeignKey("CartaoNumero");

                    b.Navigation("Cartao");
                });
#pragma warning restore 612, 618
        }
    }
}
